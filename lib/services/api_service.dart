import 'dart:convert'; // Necess√°rio para codificar o corpo da requisi√ß√£o em JSON
import 'package:http/http.dart' as http; // Importa o pacote que acabamos de instalar

class ApiService {
  // A URL base do nosso backend. Como estamos testando localmente,
  // usamos o endere√ßo especial '10.0.2.2' para o emulador de Android
  // se conectar ao 'localhost' do seu PC. Para web, 'localhost' funciona.
  // Vamos criar uma forma inteligente de lidar com isso.
  static String get baseUrl {
    // A biblioteca 'kIsWeb' nos diz se o app est√° rodando na web.
    // Infelizmente n√£o podemos us√°-la aqui diretamente, mas faremos a verifica√ß√£o no widget.
    // Por enquanto, vamos focar na web.
    return 'http://localhost:5000';
  }

  // A fun√ß√£o que vai enviar a sugest√£o para o backend.
  // Ela √© 'async' porque opera√ß√µes de rede n√£o s√£o instant√¢neas.
  static Future<bool> enviarSugestao(String sugestao) async {
    // Montamos a URL completa do endpoint.
    final url = Uri.parse('$baseUrl/sugestao');

    // Tentamos executar a chamada de rede.
    try {
      // O corpo (body) da nossa requisi√ß√£o.
      // Usamos 'jsonEncode' para transformar nosso mapa Dart em uma string JSON.
      final body = jsonEncode({
        'sugestao': sugestao,
      });

      // Aqui a chamada HTTP acontece!
      // - url: O endere√ßo de destino.
      // - headers: Informa√ß√µes importantes sobre a requisi√ß√£o. Dizemos ao backend que estamos enviando um JSON.
      // - body: O conte√∫do que estamos enviando.
      final response = await http.post(
        url,
        headers: {'Content-Type': 'application/json'},
        body: body,
      );

      // Verificamos o c√≥digo de status da resposta.
      // C√≥digos 2xx (como 200) geralmente significam sucesso.
      if (response.statusCode == 200) {
        print('‚úÖ Sugest√£o enviada com sucesso!');
        return true;
      } else {
        // Se o status n√£o for 200, algo deu errado no backend.
        print('‚ùå Erro no servidor: ${response.statusCode}');
        print('   Corpo da resposta: ${response.body}');
        return false;
      }
    } catch (e) {
      // Se a chamada de rede falhar (ex: sem internet, backend desligado).
      print('üî• Erro de conex√£o ao enviar sugest√£o: $e');
      return false;
    }
  }
}